/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Administrar;

import BaseDatos.ConexionBD;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fpenafiel
 */
public class ingresarLecturas extends javax.swing.JFrame {

    /**
     * Creates new form ingresarLecturas
     */
    public ingresarLecturas() {
        initComponents();
    }
    ConexionBD conexion = new ConexionBD();
    DefaultTableModel modelo = new DefaultTableModel();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cedulatxt = new javax.swing.JTextField();
        nombretxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable(){public boolean isCellEditable(int row, int column){
            return false;
        }};
        fechaCalendar = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lecturatxt = new javax.swing.JTextField();
        ingresarbtn = new javax.swing.JButton();
        modificarbtn = new javax.swing.JButton();
        visto = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("INGRESAR LECTURAS");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cedulatxt.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        cedulatxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulatxtActionPerformed(evt);
            }
        });
        cedulatxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cedulatxtKeyReleased(evt);
            }
        });
        getContentPane().add(cedulatxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 276, -1));

        nombretxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombretxtActionPerformed(evt);
            }
        });
        nombretxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombretxtKeyReleased(evt);
            }
        });
        getContentPane().add(nombretxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 276, -1));

        jLabel1.setText("Cédula");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));

        jLabel2.setText("Nombre");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jTabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ListSelectionModel rowSM = jTabla.getSelectionModel();
        rowSM.addListSelectionListener(new ListSelectionListener() {
            //agrego el evento para detectar el cambio de seleccion de filas en la tabla
            public void valueChanged(ListSelectionEvent e) {
                //Ignore extra messages.
                if (e.getValueIsAdjusting()) return;

                ListSelectionModel lsm =
                (ListSelectionModel)e.getSource();

                if (lsm.isSelectionEmpty()) {

                } else {
                    // System.out.println(jTabla.getSelectedRow()) ;

                    if(jTabla.getValueAt( jTabla.getSelectedRow(),0)==null){
                        nombretxt.setText("");
                    }else{
                        nombretxt.setText(jTabla.getValueAt( jTabla.getSelectedRow(),0).toString());
                    }

                    if(jTabla.getValueAt(jTabla.getSelectedRow(),1)==null){
                        lecturatxt.setText("");

                        jButton3.doClick();

                    }else{
                        try{
                            cedulatxt.setText(jTabla.getValueAt(jTabla.getSelectedRow(),1).toString());
                            ResultSet datos = conexion.ejecutarSQLSelect("select lectura  from lecturas where month(fecha_lectura)='"+String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate())))+"' and personas_idpersonas=(select idpersonas from personas where cedula='"+cedulatxt.getText()+"');");
                            int numeroLecturas=0;
                            while (datos.next()) {

                                numeroLecturas= Integer.parseInt(datos.getString("lectura"));

                            }
                            //System.out.println("select lectura  from lecturas where month(fecha_lectura)='"+String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate())))+"' and personas_idpersonas=(select idpersonas from personas where cedula='"+cedulatxt.getText()+"');");
                            //System.out.println(""+numeroLecturas);
                            if(numeroLecturas==0){
                                lecturatxt.setText("0");
                                visto.setVisible(false);
                                nombretxt.setEnabled(false);
                                cedulatxt.setEnabled(false);
                                modificarbtn.setText("Modificar");
                                modificarbtn.setVisible(false);
                                ingresarbtn.setVisible(true);

                            }else{
                                visto.setVisible(true);
                                modificarbtn.setVisible(true);
                                ingresarbtn.setVisible(false);

                                lecturatxt.setText(""+numeroLecturas);
                                nombretxt.setEnabled(false);
                                cedulatxt.setEnabled(false);
                                modificarbtn.setText("Modificar");

                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(ingresarLecturas.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }
            }
        });
        jTabla.setAutoCreateRowSorter(true);
        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jTabla);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(449, 8, 600, 429));

        fechaCalendar.addPropertyChangeListener(new java.beans.PropertyChangeListener(){
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                //Aquí agregaremos la funcionalidad que queremos
                //por ejemplo al seleccionar una fecha le mostrare un diálogo con la fecha de hoy
                fechaCalendar.propertyChange(evt);
            }
        });

        fechaCalendar.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener(){
            public void propertyChange(java.beans.PropertyChangeEvent evt){
                if(fechaCalendar.getDate()!=null){
                    try{

                        rellenarCasillas();
                        ResultSet  datos = conexion.ejecutarSQLSelect("select lectura  from lecturas where year(fecha_lectura)='" + String.valueOf(Integer.parseInt(new SimpleDateFormat("yyyy").format(fechaCalendar.getDate()))) + "' and month(fecha_lectura)='" + String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate()))) + "' and personas_idpersonas=(select idpersonas from personas where cedula='" + cedulatxt.getText() + "');");
                        int numeroLecturas = 0;
                        while (datos.next()) {

                            numeroLecturas = Integer.parseInt(datos.getString("lectura"));

                        }
                        //System.out.println("select lectura  from lecturas where month(fecha_lectura)='"+String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate())))+"' and personas_idpersonas=(select idpersonas from personas where cedula='"+cedulatxt.getText()+"');");
                        //System.out.println(""+numeroLecturas);
                        if (numeroLecturas == 0) {
                            lecturatxt.setText("");
                            visto.setVisible(false);
                            modificarbtn.setVisible(false);
                            ingresarbtn.setVisible(true);

                        } else {
                            visto.setVisible(true);
                            modificarbtn.setVisible(true);
                            ingresarbtn.setVisible(false);

                            lecturatxt.setText("" + numeroLecturas);

                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(ClientesAdmin.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });
        getContentPane().add(fechaCalendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 170, -1));

        jLabel3.setText("Fecha Lectura");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jLabel4.setText("Valor Lectura");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));
        getContentPane().add(lecturatxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 141, -1));

        ingresarbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        ingresarbtn.setText("Ingresar");
        ingresarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarbtnActionPerformed(evt);
            }
        });
        getContentPane().add(ingresarbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, -1));

        modificarbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/editar.png"))); // NOI18N
        modificarbtn.setText("Modificar");
        modificarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarbtnActionPerformed(evt);
            }
        });
        getContentPane().add(modificarbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, -1, -1));

        visto.setText("registrado");
        getContentPane().add(visto, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/goma-de-borrar.png"))); // NOI18N
        jButton3.setText("Limpiar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, 140, 41));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/salida.png"))); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 440, 140, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cedulatxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulatxtActionPerformed
        if (cedulatxt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar una cédula", "Error", JOptionPane.ERROR_MESSAGE);

        } else {

            try {
                ResultSet datos = conexion.ejecutarSQLSelect("select count(*) as num from personas where cedula='" + cedulatxt.getText() + "'");
                int numero = 0;
                while (datos.next()) {
                    numero = Integer.parseInt(datos.getString("num"));

                }

                if (numero == 0) {
                    if (JOptionPane.showConfirmDialog(null, "Esta cédula no existe. Desea ingresar un nuevo cliente?", "Nuevo Vliente", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                        nuevoCliente a = new nuevoCliente();
                        a.setVisible(true);
                    }

                } else {
                    cedulatxt.setEnabled(false);
                    nombretxt.setEnabled(false);
                    rellenarCasillas();
                    datos = conexion.ejecutarSQLSelect("select lectura  from lecturas where month(fecha_lectura)='" + String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate()))) + "' and personas_idpersonas=(select idpersonas from personas where cedula='" + cedulatxt.getText() + "');");
                    int numeroLecturas = 0;
                    while (datos.next()) {

                        numeroLecturas = Integer.parseInt(datos.getString("lectura"));

                    }
//System.out.println("select lectura  from lecturas where month(fecha_lectura)='"+String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate())))+"' and personas_idpersonas=(select idpersonas from personas where cedula='"+cedulatxt.getText()+"');");
//System.out.println(""+numeroLecturas);
                    if (numeroLecturas == 0) {
                        lecturatxt.setText("0");
                        visto.setVisible(false);
                         modificarbtn.setVisible(false);
                         ingresarbtn.setVisible(true);

                    } else {
                        visto.setVisible(true);
                        modificarbtn.setVisible(true);
                        ingresarbtn.setVisible(false);

                        lecturatxt.setText("" + numeroLecturas);

                    }

                }

            } catch (SQLException ex) {
                Logger.getLogger(ClientesAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }// TODO add your handling code here:
    }//GEN-LAST:event_cedulatxtActionPerformed
    public void rellenarCasillas() {
        try {

            ResultSet datos = conexion.ejecutarSQLSelect("select nombres as nombres  from personas where activo=1 and cedula='" + cedulatxt.getText() + "'");

            while (datos.next()) {

                nombretxt.setText(datos.getString("nombres"));

            }

// TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(consultas.Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void cedulatxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cedulatxtKeyReleased
        cargarDatos("where cedula like '%" + cedulatxt.getText() + "%'");
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulatxtKeyReleased
    public void cargarDatos(String where) {
        try {

            ResultSet datos = conexion.ejecutarSQLSelect("select nombres as nombres ,cedula from personas " + where);
            ResultSetMetaData Mdatos = datos.getMetaData();

            modelo.setColumnCount(0);
            modelo.setRowCount(0);
            int columna = 1;

            while (columna <= Mdatos.getColumnCount()) {
                modelo.addColumn(Mdatos.getColumnName(columna));
                columna++;
            }

            while (datos.next()) {

                modelo.addRow(new Object[]{datos.getString("nombres"), datos.getString("cedula")});

            }

            jTabla.setModel(modelo);
// TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(consultas.Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void nombretxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombretxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombretxtActionPerformed

    private void nombretxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombretxtKeyReleased
        cargarDatos("where nombres like '%" + nombretxt.getText() + "%'");
        // TODO add your handling code here:
    }//GEN-LAST:event_nombretxtKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        modificarbtn.setVisible(false);
        visto.setVisible(false);
        modificarbtn.setVisible(false);
        cargarDatos("");
        try {
            ResultSet datos = conexion.ejecutarSQLSelect("SELECT CURDATE() as fecha");
            String fecha = "";

            while (datos.next()) {

                fecha = datos.getString("fecha");

            }

            fechaCalendar.setDate(Date.valueOf(fecha));
        } catch (SQLException ex) {
            Logger.getLogger(ingresarLecturas.class.getName()).log(Level.SEVERE, null, ex);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void ingresarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarbtnActionPerformed
if(lecturatxt.getText().equals("")){
   JOptionPane.showMessageDialog(this, "Debe ingresar una valor de lectura", "Error", JOptionPane.ERROR_MESSAGE);

}else{

        if(cedulatxt.getText().equals("")){
   JOptionPane.showMessageDialog(this, "Debe ingresar una cédula", "Error", JOptionPane.ERROR_MESSAGE);
   jButton3.doClick();
}else{
           conexion.crearConexion();
        //System.out.print();
        conexion.ejecutarSQL("insert into lecturas(fecha_lectura,lectura,personas_idpersonas) values ('" + new SimpleDateFormat("yyyy-MM-dd").format(fechaCalendar.getDate()) + "'," + lecturatxt.getText() + ",(select idpersonas from personas where cedula='" + cedulatxt.getText() + "'))");
        JOptionPane.showMessageDialog(this, "Lectura ingresada correctamente", "Lectura Ingresado", JOptionPane.INFORMATION_MESSAGE);
        ingresarbtn.setVisible(false);
        try {
           ResultSet  datos = conexion.ejecutarSQLSelect("select lectura  from lecturas where month(fecha_lectura)='" + String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate()))) + "' and personas_idpersonas=(select idpersonas from personas where cedula='" + cedulatxt.getText() + "');");
       
          int numeroLecturas = 0;
                    while (datos.next()) {

                        numeroLecturas = Integer.parseInt(datos.getString("lectura"));

                    }
//System.out.println("select lectura  from lecturas where month(fecha_lectura)='"+String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate())))+"' and personas_idpersonas=(select idpersonas from personas where cedula='"+cedulatxt.getText()+"');");
//System.out.println(""+numeroLecturas);
                    if (numeroLecturas == 0) {
                        lecturatxt.setText("0");
                        visto.setVisible(false);
                        modificarbtn.setVisible(false);
                        ingresarbtn.setVisible(true);
                    } else {
                        visto.setVisible(true);
                        modificarbtn.setVisible(true);

                        lecturatxt.setText("" + numeroLecturas);

                    }
        } catch (SQLException ex) {
            Logger.getLogger(ingresarLecturas.class.getName()).log(Level.SEVERE, null, ex);
        }
                 
    }
}
        


  


// TODO add your handling code here:
    }//GEN-LAST:event_ingresarbtnActionPerformed

    private void modificarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarbtnActionPerformed

     if(lecturatxt.getText().equals("")){
   JOptionPane.showMessageDialog(this, "Debe ingresar una valor de lectura", "Error", JOptionPane.ERROR_MESSAGE);

}else{
     if(lecturatxt.getText().equals("")){
       JOptionPane.showMessageDialog(this, "Debe ingresar un valor de lectura", "Error", JOptionPane.ERROR_MESSAGE);

    }
    else{
        if (JOptionPane.showConfirmDialog(null, "Está seguro que desea guardar los cambios", "Guardar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {        // a.ejecutarSQL("UPDATE producto SET Descripcion='"+jDescripcion.getText()+"', Precio = "+jPrecio.getText()+", disponible="+jCantidad.getText()+" WHERE idProducto="+id+";") ;
            conexion.ejecutarSQL("update lecturas set lectura='"+lecturatxt.getText()+"' where month(fecha_lectura)='"+String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate())))+"' and personas_idpersonas=(select idpersonas from personas where cedula='"+cedulatxt.getText()+"')");
            JOptionPane.showMessageDialog(this, "Se guardaron los cambios correctamente");
            
            try {
           ResultSet  datos = conexion.ejecutarSQLSelect("select lectura  from lecturas where month(fecha_lectura)='" + String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate()))) + "' and personas_idpersonas=(select idpersonas from personas where cedula='" + cedulatxt.getText() + "');");
       
          int numeroLecturas = 0;
                    while (datos.next()) {

                        numeroLecturas = Integer.parseInt(datos.getString("lectura"));

                    }
//System.out.println("select lectura  from lecturas where month(fecha_lectura)='"+String.valueOf(Integer.parseInt(new SimpleDateFormat("MM").format(fechaCalendar.getDate())))+"' and personas_idpersonas=(select idpersonas from personas where cedula='"+cedulatxt.getText()+"');");
//System.out.println(""+numeroLecturas);
                    if (numeroLecturas == 0) {
                        lecturatxt.setText("0");
                        visto.setVisible(false);
                        modificarbtn.setVisible(false);
                        ingresarbtn.setVisible(true);
                    } else {
                        visto.setVisible(true);
                        modificarbtn.setVisible(true);

                        lecturatxt.setText("" + numeroLecturas);

                    }
        } catch (SQLException ex) {
            Logger.getLogger(ingresarLecturas.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        }
    }
     }   
        
        
        
    
// TODO add your handling code here:
    }//GEN-LAST:event_modificarbtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        cedulatxt.setEnabled(true);
        nombretxt.setEnabled(true);

        cedulatxt.setText("");
        nombretxt.setText("");
        modificarbtn.setVisible(false);
        ingresarbtn.setVisible(true);
        visto.setVisible(false);
        lecturatxt.setText("");
        cargarDatos("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ingresarLecturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ingresarLecturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ingresarLecturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ingresarLecturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ingresarLecturas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cedulatxt;
    private com.toedter.calendar.JDateChooser fechaCalendar;
    private javax.swing.JButton ingresarbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabla;
    private javax.swing.JTextField lecturatxt;
    private javax.swing.JButton modificarbtn;
    private javax.swing.JTextField nombretxt;
    private javax.swing.JLabel visto;
    // End of variables declaration//GEN-END:variables
}
